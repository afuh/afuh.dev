---
import type { SEO } from '../layouts/Page.astro'
import { getSiteContent } from '../lib/contentful'

export interface Props {
  title: string
  seo?: SEO
}

const { seoDescription } = await getSiteContent()

const canonicalURL = new URL(Astro.url.pathname, Astro.site)

const seoDefault: SEO = {
  description: seoDescription,
  image: {
    url: '/cover-720x360.jpg',
    contentType: 'image/jpeg',
    size: { width: '720', height: '360' },
  },
}

const { title, seo = seoDefault } = Astro.props
---

<head>
  <!-- Global Metadata -->
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <link rel="icon" type="image/png" href="/favicon-32x32.png" />
  <link rel="sitemap" href="/sitemap-index.xml" />
  <meta name="generator" content={Astro.generator} />

  <!-- Canonical URL -->
  <link rel="canonical" href={canonicalURL} />

  <!-- Primary Meta Tags -->
  <title>{title}</title>
  <meta name="title" content={title} />
  <meta name="description" content={seo.description} />

  <!-- Open Graph / Facebook -->
  <meta property="og:locale" content="en" />
  <meta property="og:type" content="website" />
  <meta property="og:url" content={Astro.url} />
  <meta property="og:title" content={title} />
  <meta property="og:description" content={seo.description} />
  <meta property="og:image" content={new URL(seo.image.url, Astro.url)} />
  <meta property="og:image:type" content={seo.image.contentType} />
  <meta property="og:image:width" content={seo.image.size.width} />
  <meta property="og:image:height" content={seo.image.size.height} />

  <!-- Twitter -->
  <meta property="twitter:card" content="summary_large_image" />
  <meta property="twitter:url" content={Astro.url} />
  <meta property="twitter:title" content={title} />
  <meta property="twitter:description" content={seo.description} />
  <meta property="twitter:image" content={new URL(seo.image.url, Astro.url)} />

  <!-- This is intentionally inlined to avoid FOUC -->
  <script is:inline>
    const root = document.documentElement

    if (window.matchMedia('(prefers-color-scheme: light)').matches) {
      root.classList.remove('theme-dark')
    } else {
      root.classList.add('theme-dark')
    }
  </script>
</head>
